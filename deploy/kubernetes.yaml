# Define the Deployment resource, which manages the Pods
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stock-api
spec:
  replicas: 2 # We want to run two instances (replicas) of this application for redundancy and high availability
  selector:
    matchLabels:
      app: stock-api  # This selector ensures that the Deployment manages Pods with the label 'app=stock-api'
  template:
    metadata:
      labels:
        app: stock-api  # Each Pod created by the Deployment will have the label 'app=stock-api'
    spec:
      containers:
      - name: stock-api  
        image: larrysang/stock-api:latest  # The Docker image to use for the container (pulled from Docker Hub)
        ports:
        - containerPort: 8000
        env:
        - name: STOCK_MODELS_PATH  # Define environment variable for the container
          value: "/app/models"
---
# Define the Service resource, which exposes the Deployment to the network
apiVersion: v1
kind: Service
metadata:
  name: stock-api-service
spec:
  type: LoadBalancer  # Expose the Service externally using a cloud load balancer
  selector:
    app: stock-api # This selector routes traffic to the Pods labeled 'app=stock-api'
  ports:
    - protocol: TCP # The protocol used for communication
      port: 80  # The port exposed by the Service (external port)
      targetPort: 8000  # The port on the Pods that the Service forwards traffic to (container port)
