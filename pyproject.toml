[project]
name = "dsba"
version = "0.1.0"
description = "Stock prediction MLOps platform for executive compensation decisions"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    { name = "Baichuan Du", email = "baichuan.du@essec.edu" },
    { name = "Binong Han", email = "tm1@email.com" },
    { name = "Linhui SANG", email = "larry.sang@student-cs.fr" }
]

httpx = "^0.27.0"

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.109.1"
uvicorn = "^0.27.0"
pandas = "^2.2.0"
numpy = "^1.26.4"
scikit-learn = "^1.4.0"
joblib = "^1.3.2"
yfinance = "^0.2.37"
plotly = "^5.18.0"
arch = "^6.2.0"
python-dotenv = "^1.0.0"
httpx = "^0.27.0"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = ["src/dsba"]

[tool.hatch.build.targets.wheel]
packages = ["src/dsba"]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.4",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.5",
    "mypy>=1.8.0",
    "black>=23.12.1",
    "types-requests>=2.31.0",
    "faker>=19.0.0"  # For generating test data
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--verbose --cov=src --cov-report=term-missing"
filterwarnings = [
    "ignore::DeprecationWarning",  # Cleaner test output
    "ignore::FutureWarning"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "**/__init__.py",
    "**/legacy/*.py"
]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 80  # Minimum test coverage percentage

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E", "F", "B", "I",  # Basic checks
    "UP", "PL", "RUF",    # Modern Python & ruff-specific
    "PD",                 # Pandas best practices
    "PT"                  # Pytest style
]
ignore = [
    "PT011",  # Allow pytest.raises with specific exceptions
    "PD011"   # Allow .values in tests
]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
